// <auto-generated />
using System;
using ApiEmprendimiento.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiEmprendimiento.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiEmprendimiento.Models.DetalleVenta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("VentaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaId");

                    b.ToTable("DetallesVenta");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Emprendimiento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Emprendimientos");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Inventario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cantidad")
                        .HasPrecision(18, 2)
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("FechaActualizacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("ProductoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId")
                        .IsUnique();

                    b.ToTable("Inventarios");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Producto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmprendimientoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("FechaCreacion")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EmprendimientoId");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("EmprendimientoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("EmprendimientoId");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Venta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("FechaVenta")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("UsuarioId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.DetalleVenta", b =>
                {
                    b.HasOne("ApiEmprendimiento.Models.Producto", "Producto")
                        .WithMany("DetallesVenta")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiEmprendimiento.Models.Venta", "Venta")
                        .WithMany("DetallesVenta")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Inventario", b =>
                {
                    b.HasOne("ApiEmprendimiento.Models.Producto", "Producto")
                        .WithOne("Inventario")
                        .HasForeignKey("ApiEmprendimiento.Models.Inventario", "ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Producto", b =>
                {
                    b.HasOne("ApiEmprendimiento.Models.Emprendimiento", "Emprendimiento")
                        .WithMany("Productos")
                        .HasForeignKey("EmprendimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprendimiento");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Usuario", b =>
                {
                    b.HasOne("ApiEmprendimiento.Models.Emprendimiento", "Emprendimiento")
                        .WithMany("Usuarios")
                        .HasForeignKey("EmprendimientoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Emprendimiento");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Venta", b =>
                {
                    b.HasOne("ApiEmprendimiento.Models.Usuario", "Usuario")
                        .WithMany("Ventas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Emprendimiento", b =>
                {
                    b.Navigation("Productos");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Producto", b =>
                {
                    b.Navigation("DetallesVenta");

                    b.Navigation("Inventario")
                        .IsRequired();
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Usuario", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("ApiEmprendimiento.Models.Venta", b =>
                {
                    b.Navigation("DetallesVenta");
                });
#pragma warning restore 612, 618
        }
    }
}
